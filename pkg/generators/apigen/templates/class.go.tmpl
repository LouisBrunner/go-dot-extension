{{template "preamble"}}

import (
// TODO: disgusting imports
{{if eq .Name "AudioEffectInstance"}}  "unsafe"{{end}}
{{if eq .Name "MovieWriter"}}  "unsafe"{{end}}
{{if eq .Name "PhysicsServer2DExtension"}}  "unsafe"{{end}}
{{if eq .Name "PhysicsDirectSpaceState2DExtension"}}  "unsafe"{{end}}
{{if eq .Name "PhysicsDirectSpaceState3DExtension"}}  "unsafe"{{end}}
{{if eq .Name "PhysicsServer3DRenderingServerHandler"}}  "unsafe"{{end}}
{{if eq .Name "ScriptExtension"}}  "unsafe"{{end}}
  "github.com/LouisBrunner/go-dot-extension/pkg/gdc"
)

{{$Class := mapClass .Name -}}
type {{$Class}} struct {
  obj gdc.ObjectPtr
}

func (me *{{$Class}}) SetBaseObject(obj gdc.ObjectPtr) {
  me.obj = obj
}

func (me *{{$Class}}) BaseClass() string {
  return "{{.Name}}"
}
{{- if .Constants}}

// TODO: needed?
// const (
// {{range .Constants}}{{if eq .Type "int"}}  {{$.Name}}{{pascalCased (lowerCased .Name)}} = {{.Value}}
// {{end}}{{end -}}
// )

var (
{{range .Constants}}{{if ne .Type "int"}}  {{$.Name}}{{pascalCased (lowerCased .Name)}} = "{{.Value}}" // TODO: construct correctly
{{end}}{{end -}}
)
{{- end}}

{{- range .Enums}}

type {{$.Name}}{{.Name}} int
const ({{$name := .Name}}
{{range .Values}}  {{$.Name}}{{$name}}{{pascalCased (lowerCased .Name)}} {{$.Name}}{{$name}} = {{.Value}}
{{end -}}
)
{{- end}}

{{- range .Methods}}

func {{if .IsStatic }} {{$Class}}{{else}} (me *{{$Class}}) {{end }}{{mapMethod .Name -}}
({{range .Arguments}}{{mapName .Name}} {{mapType .Type}}, {{end}}) { // TODO: return value
  // TODO: implement
}
{{- end}}

// TODO: properties

// TODO: signals
