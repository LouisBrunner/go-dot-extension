// Code generated automatically by `go-dot-extension/pkg/gdapi/apigenerator`. DO NOT EDIT.
package gdapi

import (
// TODO: disgusting imports







  "github.com/LouisBrunner/go-dot-extension/pkg/gdc"
)

type RenderingDevice struct {
  obj gdc.ObjectPtr
}

func (me *RenderingDevice) SetBaseObject(obj gdc.ObjectPtr) {
  me.obj = obj
}

func (me *RenderingDevice) BaseClass() string {
  return "RenderingDevice"
}



// Constants

var (
  RenderingDeviceInvalidId = "-1" // TODO: construct correctly
  RenderingDeviceInvalidFormatId = "-1" // TODO: construct correctly
)

// Enums

type RenderingDeviceDeviceType int
const (
  RenderingDeviceDeviceTypeDeviceTypeOther RenderingDeviceDeviceType = 0
  RenderingDeviceDeviceTypeDeviceTypeIntegratedGpu RenderingDeviceDeviceType = 1
  RenderingDeviceDeviceTypeDeviceTypeDiscreteGpu RenderingDeviceDeviceType = 2
  RenderingDeviceDeviceTypeDeviceTypeVirtualGpu RenderingDeviceDeviceType = 3
  RenderingDeviceDeviceTypeDeviceTypeCpu RenderingDeviceDeviceType = 4
  RenderingDeviceDeviceTypeDeviceTypeMax RenderingDeviceDeviceType = 5
)

type RenderingDeviceDriverResource int
const (
  RenderingDeviceDriverResourceDriverResourceVulkanDevice RenderingDeviceDriverResource = 0
  RenderingDeviceDriverResourceDriverResourceVulkanPhysicalDevice RenderingDeviceDriverResource = 1
  RenderingDeviceDriverResourceDriverResourceVulkanInstance RenderingDeviceDriverResource = 2
  RenderingDeviceDriverResourceDriverResourceVulkanQueue RenderingDeviceDriverResource = 3
  RenderingDeviceDriverResourceDriverResourceVulkanQueueFamilyIndex RenderingDeviceDriverResource = 4
  RenderingDeviceDriverResourceDriverResourceVulkanImage RenderingDeviceDriverResource = 5
  RenderingDeviceDriverResourceDriverResourceVulkanImageView RenderingDeviceDriverResource = 6
  RenderingDeviceDriverResourceDriverResourceVulkanImageNativeTextureFormat RenderingDeviceDriverResource = 7
  RenderingDeviceDriverResourceDriverResourceVulkanSampler RenderingDeviceDriverResource = 8
  RenderingDeviceDriverResourceDriverResourceVulkanDescriptorSet RenderingDeviceDriverResource = 9
  RenderingDeviceDriverResourceDriverResourceVulkanBuffer RenderingDeviceDriverResource = 10
  RenderingDeviceDriverResourceDriverResourceVulkanComputePipeline RenderingDeviceDriverResource = 11
  RenderingDeviceDriverResourceDriverResourceVulkanRenderPipeline RenderingDeviceDriverResource = 12
)

type RenderingDeviceDataFormat int
const (
  RenderingDeviceDataFormatDataFormatR4G4UnormPack8 RenderingDeviceDataFormat = 0
  RenderingDeviceDataFormatDataFormatR4G4B4A4UnormPack16 RenderingDeviceDataFormat = 1
  RenderingDeviceDataFormatDataFormatB4G4R4A4UnormPack16 RenderingDeviceDataFormat = 2
  RenderingDeviceDataFormatDataFormatR5G6B5UnormPack16 RenderingDeviceDataFormat = 3
  RenderingDeviceDataFormatDataFormatB5G6R5UnormPack16 RenderingDeviceDataFormat = 4
  RenderingDeviceDataFormatDataFormatR5G5B5A1UnormPack16 RenderingDeviceDataFormat = 5
  RenderingDeviceDataFormatDataFormatB5G5R5A1UnormPack16 RenderingDeviceDataFormat = 6
  RenderingDeviceDataFormatDataFormatA1R5G5B5UnormPack16 RenderingDeviceDataFormat = 7
  RenderingDeviceDataFormatDataFormatR8Unorm RenderingDeviceDataFormat = 8
  RenderingDeviceDataFormatDataFormatR8Snorm RenderingDeviceDataFormat = 9
  RenderingDeviceDataFormatDataFormatR8Uscaled RenderingDeviceDataFormat = 10
  RenderingDeviceDataFormatDataFormatR8Sscaled RenderingDeviceDataFormat = 11
  RenderingDeviceDataFormatDataFormatR8Uint RenderingDeviceDataFormat = 12
  RenderingDeviceDataFormatDataFormatR8Sint RenderingDeviceDataFormat = 13
  RenderingDeviceDataFormatDataFormatR8Srgb RenderingDeviceDataFormat = 14
  RenderingDeviceDataFormatDataFormatR8G8Unorm RenderingDeviceDataFormat = 15
  RenderingDeviceDataFormatDataFormatR8G8Snorm RenderingDeviceDataFormat = 16
  RenderingDeviceDataFormatDataFormatR8G8Uscaled RenderingDeviceDataFormat = 17
  RenderingDeviceDataFormatDataFormatR8G8Sscaled RenderingDeviceDataFormat = 18
  RenderingDeviceDataFormatDataFormatR8G8Uint RenderingDeviceDataFormat = 19
  RenderingDeviceDataFormatDataFormatR8G8Sint RenderingDeviceDataFormat = 20
  RenderingDeviceDataFormatDataFormatR8G8Srgb RenderingDeviceDataFormat = 21
  RenderingDeviceDataFormatDataFormatR8G8B8Unorm RenderingDeviceDataFormat = 22
  RenderingDeviceDataFormatDataFormatR8G8B8Snorm RenderingDeviceDataFormat = 23
  RenderingDeviceDataFormatDataFormatR8G8B8Uscaled RenderingDeviceDataFormat = 24
  RenderingDeviceDataFormatDataFormatR8G8B8Sscaled RenderingDeviceDataFormat = 25
  RenderingDeviceDataFormatDataFormatR8G8B8Uint RenderingDeviceDataFormat = 26
  RenderingDeviceDataFormatDataFormatR8G8B8Sint RenderingDeviceDataFormat = 27
  RenderingDeviceDataFormatDataFormatR8G8B8Srgb RenderingDeviceDataFormat = 28
  RenderingDeviceDataFormatDataFormatB8G8R8Unorm RenderingDeviceDataFormat = 29
  RenderingDeviceDataFormatDataFormatB8G8R8Snorm RenderingDeviceDataFormat = 30
  RenderingDeviceDataFormatDataFormatB8G8R8Uscaled RenderingDeviceDataFormat = 31
  RenderingDeviceDataFormatDataFormatB8G8R8Sscaled RenderingDeviceDataFormat = 32
  RenderingDeviceDataFormatDataFormatB8G8R8Uint RenderingDeviceDataFormat = 33
  RenderingDeviceDataFormatDataFormatB8G8R8Sint RenderingDeviceDataFormat = 34
  RenderingDeviceDataFormatDataFormatB8G8R8Srgb RenderingDeviceDataFormat = 35
  RenderingDeviceDataFormatDataFormatR8G8B8A8Unorm RenderingDeviceDataFormat = 36
  RenderingDeviceDataFormatDataFormatR8G8B8A8Snorm RenderingDeviceDataFormat = 37
  RenderingDeviceDataFormatDataFormatR8G8B8A8Uscaled RenderingDeviceDataFormat = 38
  RenderingDeviceDataFormatDataFormatR8G8B8A8Sscaled RenderingDeviceDataFormat = 39
  RenderingDeviceDataFormatDataFormatR8G8B8A8Uint RenderingDeviceDataFormat = 40
  RenderingDeviceDataFormatDataFormatR8G8B8A8Sint RenderingDeviceDataFormat = 41
  RenderingDeviceDataFormatDataFormatR8G8B8A8Srgb RenderingDeviceDataFormat = 42
  RenderingDeviceDataFormatDataFormatB8G8R8A8Unorm RenderingDeviceDataFormat = 43
  RenderingDeviceDataFormatDataFormatB8G8R8A8Snorm RenderingDeviceDataFormat = 44
  RenderingDeviceDataFormatDataFormatB8G8R8A8Uscaled RenderingDeviceDataFormat = 45
  RenderingDeviceDataFormatDataFormatB8G8R8A8Sscaled RenderingDeviceDataFormat = 46
  RenderingDeviceDataFormatDataFormatB8G8R8A8Uint RenderingDeviceDataFormat = 47
  RenderingDeviceDataFormatDataFormatB8G8R8A8Sint RenderingDeviceDataFormat = 48
  RenderingDeviceDataFormatDataFormatB8G8R8A8Srgb RenderingDeviceDataFormat = 49
  RenderingDeviceDataFormatDataFormatA8B8G8R8UnormPack32 RenderingDeviceDataFormat = 50
  RenderingDeviceDataFormatDataFormatA8B8G8R8SnormPack32 RenderingDeviceDataFormat = 51
  RenderingDeviceDataFormatDataFormatA8B8G8R8UscaledPack32 RenderingDeviceDataFormat = 52
  RenderingDeviceDataFormatDataFormatA8B8G8R8SscaledPack32 RenderingDeviceDataFormat = 53
  RenderingDeviceDataFormatDataFormatA8B8G8R8UintPack32 RenderingDeviceDataFormat = 54
  RenderingDeviceDataFormatDataFormatA8B8G8R8SintPack32 RenderingDeviceDataFormat = 55
  RenderingDeviceDataFormatDataFormatA8B8G8R8SrgbPack32 RenderingDeviceDataFormat = 56
  RenderingDeviceDataFormatDataFormatA2R10G10B10UnormPack32 RenderingDeviceDataFormat = 57
  RenderingDeviceDataFormatDataFormatA2R10G10B10SnormPack32 RenderingDeviceDataFormat = 58
  RenderingDeviceDataFormatDataFormatA2R10G10B10UscaledPack32 RenderingDeviceDataFormat = 59
  RenderingDeviceDataFormatDataFormatA2R10G10B10SscaledPack32 RenderingDeviceDataFormat = 60
  RenderingDeviceDataFormatDataFormatA2R10G10B10UintPack32 RenderingDeviceDataFormat = 61
  RenderingDeviceDataFormatDataFormatA2R10G10B10SintPack32 RenderingDeviceDataFormat = 62
  RenderingDeviceDataFormatDataFormatA2B10G10R10UnormPack32 RenderingDeviceDataFormat = 63
  RenderingDeviceDataFormatDataFormatA2B10G10R10SnormPack32 RenderingDeviceDataFormat = 64
  RenderingDeviceDataFormatDataFormatA2B10G10R10UscaledPack32 RenderingDeviceDataFormat = 65
  RenderingDeviceDataFormatDataFormatA2B10G10R10SscaledPack32 RenderingDeviceDataFormat = 66
  RenderingDeviceDataFormatDataFormatA2B10G10R10UintPack32 RenderingDeviceDataFormat = 67
  RenderingDeviceDataFormatDataFormatA2B10G10R10SintPack32 RenderingDeviceDataFormat = 68
  RenderingDeviceDataFormatDataFormatR16Unorm RenderingDeviceDataFormat = 69
  RenderingDeviceDataFormatDataFormatR16Snorm RenderingDeviceDataFormat = 70
  RenderingDeviceDataFormatDataFormatR16Uscaled RenderingDeviceDataFormat = 71
  RenderingDeviceDataFormatDataFormatR16Sscaled RenderingDeviceDataFormat = 72
  RenderingDeviceDataFormatDataFormatR16Uint RenderingDeviceDataFormat = 73
  RenderingDeviceDataFormatDataFormatR16Sint RenderingDeviceDataFormat = 74
  RenderingDeviceDataFormatDataFormatR16Sfloat RenderingDeviceDataFormat = 75
  RenderingDeviceDataFormatDataFormatR16G16Unorm RenderingDeviceDataFormat = 76
  RenderingDeviceDataFormatDataFormatR16G16Snorm RenderingDeviceDataFormat = 77
  RenderingDeviceDataFormatDataFormatR16G16Uscaled RenderingDeviceDataFormat = 78
  RenderingDeviceDataFormatDataFormatR16G16Sscaled RenderingDeviceDataFormat = 79
  RenderingDeviceDataFormatDataFormatR16G16Uint RenderingDeviceDataFormat = 80
  RenderingDeviceDataFormatDataFormatR16G16Sint RenderingDeviceDataFormat = 81
  RenderingDeviceDataFormatDataFormatR16G16Sfloat RenderingDeviceDataFormat = 82
  RenderingDeviceDataFormatDataFormatR16G16B16Unorm RenderingDeviceDataFormat = 83
  RenderingDeviceDataFormatDataFormatR16G16B16Snorm RenderingDeviceDataFormat = 84
  RenderingDeviceDataFormatDataFormatR16G16B16Uscaled RenderingDeviceDataFormat = 85
  RenderingDeviceDataFormatDataFormatR16G16B16Sscaled RenderingDeviceDataFormat = 86
  RenderingDeviceDataFormatDataFormatR16G16B16Uint RenderingDeviceDataFormat = 87
  RenderingDeviceDataFormatDataFormatR16G16B16Sint RenderingDeviceDataFormat = 88
  RenderingDeviceDataFormatDataFormatR16G16B16Sfloat RenderingDeviceDataFormat = 89
  RenderingDeviceDataFormatDataFormatR16G16B16A16Unorm RenderingDeviceDataFormat = 90
  RenderingDeviceDataFormatDataFormatR16G16B16A16Snorm RenderingDeviceDataFormat = 91
  RenderingDeviceDataFormatDataFormatR16G16B16A16Uscaled RenderingDeviceDataFormat = 92
  RenderingDeviceDataFormatDataFormatR16G16B16A16Sscaled RenderingDeviceDataFormat = 93
  RenderingDeviceDataFormatDataFormatR16G16B16A16Uint RenderingDeviceDataFormat = 94
  RenderingDeviceDataFormatDataFormatR16G16B16A16Sint RenderingDeviceDataFormat = 95
  RenderingDeviceDataFormatDataFormatR16G16B16A16Sfloat RenderingDeviceDataFormat = 96
  RenderingDeviceDataFormatDataFormatR32Uint RenderingDeviceDataFormat = 97
  RenderingDeviceDataFormatDataFormatR32Sint RenderingDeviceDataFormat = 98
  RenderingDeviceDataFormatDataFormatR32Sfloat RenderingDeviceDataFormat = 99
  RenderingDeviceDataFormatDataFormatR32G32Uint RenderingDeviceDataFormat = 100
  RenderingDeviceDataFormatDataFormatR32G32Sint RenderingDeviceDataFormat = 101
  RenderingDeviceDataFormatDataFormatR32G32Sfloat RenderingDeviceDataFormat = 102
  RenderingDeviceDataFormatDataFormatR32G32B32Uint RenderingDeviceDataFormat = 103
  RenderingDeviceDataFormatDataFormatR32G32B32Sint RenderingDeviceDataFormat = 104
  RenderingDeviceDataFormatDataFormatR32G32B32Sfloat RenderingDeviceDataFormat = 105
  RenderingDeviceDataFormatDataFormatR32G32B32A32Uint RenderingDeviceDataFormat = 106
  RenderingDeviceDataFormatDataFormatR32G32B32A32Sint RenderingDeviceDataFormat = 107
  RenderingDeviceDataFormatDataFormatR32G32B32A32Sfloat RenderingDeviceDataFormat = 108
  RenderingDeviceDataFormatDataFormatR64Uint RenderingDeviceDataFormat = 109
  RenderingDeviceDataFormatDataFormatR64Sint RenderingDeviceDataFormat = 110
  RenderingDeviceDataFormatDataFormatR64Sfloat RenderingDeviceDataFormat = 111
  RenderingDeviceDataFormatDataFormatR64G64Uint RenderingDeviceDataFormat = 112
  RenderingDeviceDataFormatDataFormatR64G64Sint RenderingDeviceDataFormat = 113
  RenderingDeviceDataFormatDataFormatR64G64Sfloat RenderingDeviceDataFormat = 114
  RenderingDeviceDataFormatDataFormatR64G64B64Uint RenderingDeviceDataFormat = 115
  RenderingDeviceDataFormatDataFormatR64G64B64Sint RenderingDeviceDataFormat = 116
  RenderingDeviceDataFormatDataFormatR64G64B64Sfloat RenderingDeviceDataFormat = 117
  RenderingDeviceDataFormatDataFormatR64G64B64A64Uint RenderingDeviceDataFormat = 118
  RenderingDeviceDataFormatDataFormatR64G64B64A64Sint RenderingDeviceDataFormat = 119
  RenderingDeviceDataFormatDataFormatR64G64B64A64Sfloat RenderingDeviceDataFormat = 120
  RenderingDeviceDataFormatDataFormatB10G11R11UfloatPack32 RenderingDeviceDataFormat = 121
  RenderingDeviceDataFormatDataFormatE5B9G9R9UfloatPack32 RenderingDeviceDataFormat = 122
  RenderingDeviceDataFormatDataFormatD16Unorm RenderingDeviceDataFormat = 123
  RenderingDeviceDataFormatDataFormatX8D24UnormPack32 RenderingDeviceDataFormat = 124
  RenderingDeviceDataFormatDataFormatD32Sfloat RenderingDeviceDataFormat = 125
  RenderingDeviceDataFormatDataFormatS8Uint RenderingDeviceDataFormat = 126
  RenderingDeviceDataFormatDataFormatD16UnormS8Uint RenderingDeviceDataFormat = 127
  RenderingDeviceDataFormatDataFormatD24UnormS8Uint RenderingDeviceDataFormat = 128
  RenderingDeviceDataFormatDataFormatD32SfloatS8Uint RenderingDeviceDataFormat = 129
  RenderingDeviceDataFormatDataFormatBc1RgbUnormBlock RenderingDeviceDataFormat = 130
  RenderingDeviceDataFormatDataFormatBc1RgbSrgbBlock RenderingDeviceDataFormat = 131
  RenderingDeviceDataFormatDataFormatBc1RgbaUnormBlock RenderingDeviceDataFormat = 132
  RenderingDeviceDataFormatDataFormatBc1RgbaSrgbBlock RenderingDeviceDataFormat = 133
  RenderingDeviceDataFormatDataFormatBc2UnormBlock RenderingDeviceDataFormat = 134
  RenderingDeviceDataFormatDataFormatBc2SrgbBlock RenderingDeviceDataFormat = 135
  RenderingDeviceDataFormatDataFormatBc3UnormBlock RenderingDeviceDataFormat = 136
  RenderingDeviceDataFormatDataFormatBc3SrgbBlock RenderingDeviceDataFormat = 137
  RenderingDeviceDataFormatDataFormatBc4UnormBlock RenderingDeviceDataFormat = 138
  RenderingDeviceDataFormatDataFormatBc4SnormBlock RenderingDeviceDataFormat = 139
  RenderingDeviceDataFormatDataFormatBc5UnormBlock RenderingDeviceDataFormat = 140
  RenderingDeviceDataFormatDataFormatBc5SnormBlock RenderingDeviceDataFormat = 141
  RenderingDeviceDataFormatDataFormatBc6HUfloatBlock RenderingDeviceDataFormat = 142
  RenderingDeviceDataFormatDataFormatBc6HSfloatBlock RenderingDeviceDataFormat = 143
  RenderingDeviceDataFormatDataFormatBc7UnormBlock RenderingDeviceDataFormat = 144
  RenderingDeviceDataFormatDataFormatBc7SrgbBlock RenderingDeviceDataFormat = 145
  RenderingDeviceDataFormatDataFormatEtc2R8G8B8UnormBlock RenderingDeviceDataFormat = 146
  RenderingDeviceDataFormatDataFormatEtc2R8G8B8SrgbBlock RenderingDeviceDataFormat = 147
  RenderingDeviceDataFormatDataFormatEtc2R8G8B8A1UnormBlock RenderingDeviceDataFormat = 148
  RenderingDeviceDataFormatDataFormatEtc2R8G8B8A1SrgbBlock RenderingDeviceDataFormat = 149
  RenderingDeviceDataFormatDataFormatEtc2R8G8B8A8UnormBlock RenderingDeviceDataFormat = 150
  RenderingDeviceDataFormatDataFormatEtc2R8G8B8A8SrgbBlock RenderingDeviceDataFormat = 151
  RenderingDeviceDataFormatDataFormatEacR11UnormBlock RenderingDeviceDataFormat = 152
  RenderingDeviceDataFormatDataFormatEacR11SnormBlock RenderingDeviceDataFormat = 153
  RenderingDeviceDataFormatDataFormatEacR11G11UnormBlock RenderingDeviceDataFormat = 154
  RenderingDeviceDataFormatDataFormatEacR11G11SnormBlock RenderingDeviceDataFormat = 155
  RenderingDeviceDataFormatDataFormatAstc4X4UnormBlock RenderingDeviceDataFormat = 156
  RenderingDeviceDataFormatDataFormatAstc4X4SrgbBlock RenderingDeviceDataFormat = 157
  RenderingDeviceDataFormatDataFormatAstc5X4UnormBlock RenderingDeviceDataFormat = 158
  RenderingDeviceDataFormatDataFormatAstc5X4SrgbBlock RenderingDeviceDataFormat = 159
  RenderingDeviceDataFormatDataFormatAstc5X5UnormBlock RenderingDeviceDataFormat = 160
  RenderingDeviceDataFormatDataFormatAstc5X5SrgbBlock RenderingDeviceDataFormat = 161
  RenderingDeviceDataFormatDataFormatAstc6X5UnormBlock RenderingDeviceDataFormat = 162
  RenderingDeviceDataFormatDataFormatAstc6X5SrgbBlock RenderingDeviceDataFormat = 163
  RenderingDeviceDataFormatDataFormatAstc6X6UnormBlock RenderingDeviceDataFormat = 164
  RenderingDeviceDataFormatDataFormatAstc6X6SrgbBlock RenderingDeviceDataFormat = 165
  RenderingDeviceDataFormatDataFormatAstc8X5UnormBlock RenderingDeviceDataFormat = 166
  RenderingDeviceDataFormatDataFormatAstc8X5SrgbBlock RenderingDeviceDataFormat = 167
  RenderingDeviceDataFormatDataFormatAstc8X6UnormBlock RenderingDeviceDataFormat = 168
  RenderingDeviceDataFormatDataFormatAstc8X6SrgbBlock RenderingDeviceDataFormat = 169
  RenderingDeviceDataFormatDataFormatAstc8X8UnormBlock RenderingDeviceDataFormat = 170
  RenderingDeviceDataFormatDataFormatAstc8X8SrgbBlock RenderingDeviceDataFormat = 171
  RenderingDeviceDataFormatDataFormatAstc10X5UnormBlock RenderingDeviceDataFormat = 172
  RenderingDeviceDataFormatDataFormatAstc10X5SrgbBlock RenderingDeviceDataFormat = 173
  RenderingDeviceDataFormatDataFormatAstc10X6UnormBlock RenderingDeviceDataFormat = 174
  RenderingDeviceDataFormatDataFormatAstc10X6SrgbBlock RenderingDeviceDataFormat = 175
  RenderingDeviceDataFormatDataFormatAstc10X8UnormBlock RenderingDeviceDataFormat = 176
  RenderingDeviceDataFormatDataFormatAstc10X8SrgbBlock RenderingDeviceDataFormat = 177
  RenderingDeviceDataFormatDataFormatAstc10X10UnormBlock RenderingDeviceDataFormat = 178
  RenderingDeviceDataFormatDataFormatAstc10X10SrgbBlock RenderingDeviceDataFormat = 179
  RenderingDeviceDataFormatDataFormatAstc12X10UnormBlock RenderingDeviceDataFormat = 180
  RenderingDeviceDataFormatDataFormatAstc12X10SrgbBlock RenderingDeviceDataFormat = 181
  RenderingDeviceDataFormatDataFormatAstc12X12UnormBlock RenderingDeviceDataFormat = 182
  RenderingDeviceDataFormatDataFormatAstc12X12SrgbBlock RenderingDeviceDataFormat = 183
  RenderingDeviceDataFormatDataFormatG8B8G8R8422Unorm RenderingDeviceDataFormat = 184
  RenderingDeviceDataFormatDataFormatB8G8R8G8422Unorm RenderingDeviceDataFormat = 185
  RenderingDeviceDataFormatDataFormatG8B8R83Plane420Unorm RenderingDeviceDataFormat = 186
  RenderingDeviceDataFormatDataFormatG8B8R82Plane420Unorm RenderingDeviceDataFormat = 187
  RenderingDeviceDataFormatDataFormatG8B8R83Plane422Unorm RenderingDeviceDataFormat = 188
  RenderingDeviceDataFormatDataFormatG8B8R82Plane422Unorm RenderingDeviceDataFormat = 189
  RenderingDeviceDataFormatDataFormatG8B8R83Plane444Unorm RenderingDeviceDataFormat = 190
  RenderingDeviceDataFormatDataFormatR10X6UnormPack16 RenderingDeviceDataFormat = 191
  RenderingDeviceDataFormatDataFormatR10X6G10X6Unorm2Pack16 RenderingDeviceDataFormat = 192
  RenderingDeviceDataFormatDataFormatR10X6G10X6B10X6A10X6Unorm4Pack16 RenderingDeviceDataFormat = 193
  RenderingDeviceDataFormatDataFormatG10X6B10X6G10X6R10X6422Unorm4Pack16 RenderingDeviceDataFormat = 194
  RenderingDeviceDataFormatDataFormatB10X6G10X6R10X6G10X6422Unorm4Pack16 RenderingDeviceDataFormat = 195
  RenderingDeviceDataFormatDataFormatG10X6B10X6R10X63Plane420Unorm3Pack16 RenderingDeviceDataFormat = 196
  RenderingDeviceDataFormatDataFormatG10X6B10X6R10X62Plane420Unorm3Pack16 RenderingDeviceDataFormat = 197
  RenderingDeviceDataFormatDataFormatG10X6B10X6R10X63Plane422Unorm3Pack16 RenderingDeviceDataFormat = 198
  RenderingDeviceDataFormatDataFormatG10X6B10X6R10X62Plane422Unorm3Pack16 RenderingDeviceDataFormat = 199
  RenderingDeviceDataFormatDataFormatG10X6B10X6R10X63Plane444Unorm3Pack16 RenderingDeviceDataFormat = 200
  RenderingDeviceDataFormatDataFormatR12X4UnormPack16 RenderingDeviceDataFormat = 201
  RenderingDeviceDataFormatDataFormatR12X4G12X4Unorm2Pack16 RenderingDeviceDataFormat = 202
  RenderingDeviceDataFormatDataFormatR12X4G12X4B12X4A12X4Unorm4Pack16 RenderingDeviceDataFormat = 203
  RenderingDeviceDataFormatDataFormatG12X4B12X4G12X4R12X4422Unorm4Pack16 RenderingDeviceDataFormat = 204
  RenderingDeviceDataFormatDataFormatB12X4G12X4R12X4G12X4422Unorm4Pack16 RenderingDeviceDataFormat = 205
  RenderingDeviceDataFormatDataFormatG12X4B12X4R12X43Plane420Unorm3Pack16 RenderingDeviceDataFormat = 206
  RenderingDeviceDataFormatDataFormatG12X4B12X4R12X42Plane420Unorm3Pack16 RenderingDeviceDataFormat = 207
  RenderingDeviceDataFormatDataFormatG12X4B12X4R12X43Plane422Unorm3Pack16 RenderingDeviceDataFormat = 208
  RenderingDeviceDataFormatDataFormatG12X4B12X4R12X42Plane422Unorm3Pack16 RenderingDeviceDataFormat = 209
  RenderingDeviceDataFormatDataFormatG12X4B12X4R12X43Plane444Unorm3Pack16 RenderingDeviceDataFormat = 210
  RenderingDeviceDataFormatDataFormatG16B16G16R16422Unorm RenderingDeviceDataFormat = 211
  RenderingDeviceDataFormatDataFormatB16G16R16G16422Unorm RenderingDeviceDataFormat = 212
  RenderingDeviceDataFormatDataFormatG16B16R163Plane420Unorm RenderingDeviceDataFormat = 213
  RenderingDeviceDataFormatDataFormatG16B16R162Plane420Unorm RenderingDeviceDataFormat = 214
  RenderingDeviceDataFormatDataFormatG16B16R163Plane422Unorm RenderingDeviceDataFormat = 215
  RenderingDeviceDataFormatDataFormatG16B16R162Plane422Unorm RenderingDeviceDataFormat = 216
  RenderingDeviceDataFormatDataFormatG16B16R163Plane444Unorm RenderingDeviceDataFormat = 217
  RenderingDeviceDataFormatDataFormatMax RenderingDeviceDataFormat = 218
)

type RenderingDeviceBarrierMask int
const (
  RenderingDeviceBarrierMaskBarrierMaskRaster RenderingDeviceBarrierMask = 1
  RenderingDeviceBarrierMaskBarrierMaskCompute RenderingDeviceBarrierMask = 2
  RenderingDeviceBarrierMaskBarrierMaskTransfer RenderingDeviceBarrierMask = 4
  RenderingDeviceBarrierMaskBarrierMaskAllBarriers RenderingDeviceBarrierMask = 7
  RenderingDeviceBarrierMaskBarrierMaskNoBarrier RenderingDeviceBarrierMask = 8
)

type RenderingDeviceTextureType int
const (
  RenderingDeviceTextureTypeTextureType1D RenderingDeviceTextureType = 0
  RenderingDeviceTextureTypeTextureType2D RenderingDeviceTextureType = 1
  RenderingDeviceTextureTypeTextureType3D RenderingDeviceTextureType = 2
  RenderingDeviceTextureTypeTextureTypeCube RenderingDeviceTextureType = 3
  RenderingDeviceTextureTypeTextureType1DArray RenderingDeviceTextureType = 4
  RenderingDeviceTextureTypeTextureType2DArray RenderingDeviceTextureType = 5
  RenderingDeviceTextureTypeTextureTypeCubeArray RenderingDeviceTextureType = 6
  RenderingDeviceTextureTypeTextureTypeMax RenderingDeviceTextureType = 7
)

type RenderingDeviceTextureSamples int
const (
  RenderingDeviceTextureSamplesTextureSamples1 RenderingDeviceTextureSamples = 0
  RenderingDeviceTextureSamplesTextureSamples2 RenderingDeviceTextureSamples = 1
  RenderingDeviceTextureSamplesTextureSamples4 RenderingDeviceTextureSamples = 2
  RenderingDeviceTextureSamplesTextureSamples8 RenderingDeviceTextureSamples = 3
  RenderingDeviceTextureSamplesTextureSamples16 RenderingDeviceTextureSamples = 4
  RenderingDeviceTextureSamplesTextureSamples32 RenderingDeviceTextureSamples = 5
  RenderingDeviceTextureSamplesTextureSamples64 RenderingDeviceTextureSamples = 6
  RenderingDeviceTextureSamplesTextureSamplesMax RenderingDeviceTextureSamples = 7
)

type RenderingDeviceTextureUsageBits int
const (
  RenderingDeviceTextureUsageBitsTextureUsageSamplingBit RenderingDeviceTextureUsageBits = 1
  RenderingDeviceTextureUsageBitsTextureUsageColorAttachmentBit RenderingDeviceTextureUsageBits = 2
  RenderingDeviceTextureUsageBitsTextureUsageDepthStencilAttachmentBit RenderingDeviceTextureUsageBits = 4
  RenderingDeviceTextureUsageBitsTextureUsageStorageBit RenderingDeviceTextureUsageBits = 8
  RenderingDeviceTextureUsageBitsTextureUsageStorageAtomicBit RenderingDeviceTextureUsageBits = 16
  RenderingDeviceTextureUsageBitsTextureUsageCpuReadBit RenderingDeviceTextureUsageBits = 32
  RenderingDeviceTextureUsageBitsTextureUsageCanUpdateBit RenderingDeviceTextureUsageBits = 64
  RenderingDeviceTextureUsageBitsTextureUsageCanCopyFromBit RenderingDeviceTextureUsageBits = 128
  RenderingDeviceTextureUsageBitsTextureUsageCanCopyToBit RenderingDeviceTextureUsageBits = 256
  RenderingDeviceTextureUsageBitsTextureUsageInputAttachmentBit RenderingDeviceTextureUsageBits = 512
)

type RenderingDeviceTextureSwizzle int
const (
  RenderingDeviceTextureSwizzleTextureSwizzleIdentity RenderingDeviceTextureSwizzle = 0
  RenderingDeviceTextureSwizzleTextureSwizzleZero RenderingDeviceTextureSwizzle = 1
  RenderingDeviceTextureSwizzleTextureSwizzleOne RenderingDeviceTextureSwizzle = 2
  RenderingDeviceTextureSwizzleTextureSwizzleR RenderingDeviceTextureSwizzle = 3
  RenderingDeviceTextureSwizzleTextureSwizzleG RenderingDeviceTextureSwizzle = 4
  RenderingDeviceTextureSwizzleTextureSwizzleB RenderingDeviceTextureSwizzle = 5
  RenderingDeviceTextureSwizzleTextureSwizzleA RenderingDeviceTextureSwizzle = 6
  RenderingDeviceTextureSwizzleTextureSwizzleMax RenderingDeviceTextureSwizzle = 7
)

type RenderingDeviceTextureSliceType int
const (
  RenderingDeviceTextureSliceTypeTextureSlice2D RenderingDeviceTextureSliceType = 0
  RenderingDeviceTextureSliceTypeTextureSliceCubemap RenderingDeviceTextureSliceType = 1
  RenderingDeviceTextureSliceTypeTextureSlice3D RenderingDeviceTextureSliceType = 2
)

type RenderingDeviceSamplerFilter int
const (
  RenderingDeviceSamplerFilterSamplerFilterNearest RenderingDeviceSamplerFilter = 0
  RenderingDeviceSamplerFilterSamplerFilterLinear RenderingDeviceSamplerFilter = 1
)

type RenderingDeviceSamplerRepeatMode int
const (
  RenderingDeviceSamplerRepeatModeSamplerRepeatModeRepeat RenderingDeviceSamplerRepeatMode = 0
  RenderingDeviceSamplerRepeatModeSamplerRepeatModeMirroredRepeat RenderingDeviceSamplerRepeatMode = 1
  RenderingDeviceSamplerRepeatModeSamplerRepeatModeClampToEdge RenderingDeviceSamplerRepeatMode = 2
  RenderingDeviceSamplerRepeatModeSamplerRepeatModeClampToBorder RenderingDeviceSamplerRepeatMode = 3
  RenderingDeviceSamplerRepeatModeSamplerRepeatModeMirrorClampToEdge RenderingDeviceSamplerRepeatMode = 4
  RenderingDeviceSamplerRepeatModeSamplerRepeatModeMax RenderingDeviceSamplerRepeatMode = 5
)

type RenderingDeviceSamplerBorderColor int
const (
  RenderingDeviceSamplerBorderColorSamplerBorderColorFloatTransparentBlack RenderingDeviceSamplerBorderColor = 0
  RenderingDeviceSamplerBorderColorSamplerBorderColorIntTransparentBlack RenderingDeviceSamplerBorderColor = 1
  RenderingDeviceSamplerBorderColorSamplerBorderColorFloatOpaqueBlack RenderingDeviceSamplerBorderColor = 2
  RenderingDeviceSamplerBorderColorSamplerBorderColorIntOpaqueBlack RenderingDeviceSamplerBorderColor = 3
  RenderingDeviceSamplerBorderColorSamplerBorderColorFloatOpaqueWhite RenderingDeviceSamplerBorderColor = 4
  RenderingDeviceSamplerBorderColorSamplerBorderColorIntOpaqueWhite RenderingDeviceSamplerBorderColor = 5
  RenderingDeviceSamplerBorderColorSamplerBorderColorMax RenderingDeviceSamplerBorderColor = 6
)

type RenderingDeviceVertexFrequency int
const (
  RenderingDeviceVertexFrequencyVertexFrequencyVertex RenderingDeviceVertexFrequency = 0
  RenderingDeviceVertexFrequencyVertexFrequencyInstance RenderingDeviceVertexFrequency = 1
)

type RenderingDeviceIndexBufferFormat int
const (
  RenderingDeviceIndexBufferFormatIndexBufferFormatUint16 RenderingDeviceIndexBufferFormat = 0
  RenderingDeviceIndexBufferFormatIndexBufferFormatUint32 RenderingDeviceIndexBufferFormat = 1
)

type RenderingDeviceStorageBufferUsage int
const (
  RenderingDeviceStorageBufferUsageStorageBufferUsageDispatchIndirect RenderingDeviceStorageBufferUsage = 1
)

type RenderingDeviceUniformType int
const (
  RenderingDeviceUniformTypeUniformTypeSampler RenderingDeviceUniformType = 0
  RenderingDeviceUniformTypeUniformTypeSamplerWithTexture RenderingDeviceUniformType = 1
  RenderingDeviceUniformTypeUniformTypeTexture RenderingDeviceUniformType = 2
  RenderingDeviceUniformTypeUniformTypeImage RenderingDeviceUniformType = 3
  RenderingDeviceUniformTypeUniformTypeTextureBuffer RenderingDeviceUniformType = 4
  RenderingDeviceUniformTypeUniformTypeSamplerWithTextureBuffer RenderingDeviceUniformType = 5
  RenderingDeviceUniformTypeUniformTypeImageBuffer RenderingDeviceUniformType = 6
  RenderingDeviceUniformTypeUniformTypeUniformBuffer RenderingDeviceUniformType = 7
  RenderingDeviceUniformTypeUniformTypeStorageBuffer RenderingDeviceUniformType = 8
  RenderingDeviceUniformTypeUniformTypeInputAttachment RenderingDeviceUniformType = 9
  RenderingDeviceUniformTypeUniformTypeMax RenderingDeviceUniformType = 10
)

type RenderingDeviceRenderPrimitive int
const (
  RenderingDeviceRenderPrimitiveRenderPrimitivePoints RenderingDeviceRenderPrimitive = 0
  RenderingDeviceRenderPrimitiveRenderPrimitiveLines RenderingDeviceRenderPrimitive = 1
  RenderingDeviceRenderPrimitiveRenderPrimitiveLinesWithAdjacency RenderingDeviceRenderPrimitive = 2
  RenderingDeviceRenderPrimitiveRenderPrimitiveLinestrips RenderingDeviceRenderPrimitive = 3
  RenderingDeviceRenderPrimitiveRenderPrimitiveLinestripsWithAdjacency RenderingDeviceRenderPrimitive = 4
  RenderingDeviceRenderPrimitiveRenderPrimitiveTriangles RenderingDeviceRenderPrimitive = 5
  RenderingDeviceRenderPrimitiveRenderPrimitiveTrianglesWithAdjacency RenderingDeviceRenderPrimitive = 6
  RenderingDeviceRenderPrimitiveRenderPrimitiveTriangleStrips RenderingDeviceRenderPrimitive = 7
  RenderingDeviceRenderPrimitiveRenderPrimitiveTriangleStripsWithAjacency RenderingDeviceRenderPrimitive = 8
  RenderingDeviceRenderPrimitiveRenderPrimitiveTriangleStripsWithRestartIndex RenderingDeviceRenderPrimitive = 9
  RenderingDeviceRenderPrimitiveRenderPrimitiveTesselationPatch RenderingDeviceRenderPrimitive = 10
  RenderingDeviceRenderPrimitiveRenderPrimitiveMax RenderingDeviceRenderPrimitive = 11
)

type RenderingDevicePolygonCullMode int
const (
  RenderingDevicePolygonCullModePolygonCullDisabled RenderingDevicePolygonCullMode = 0
  RenderingDevicePolygonCullModePolygonCullFront RenderingDevicePolygonCullMode = 1
  RenderingDevicePolygonCullModePolygonCullBack RenderingDevicePolygonCullMode = 2
)

type RenderingDevicePolygonFrontFace int
const (
  RenderingDevicePolygonFrontFacePolygonFrontFaceClockwise RenderingDevicePolygonFrontFace = 0
  RenderingDevicePolygonFrontFacePolygonFrontFaceCounterClockwise RenderingDevicePolygonFrontFace = 1
)

type RenderingDeviceStencilOperation int
const (
  RenderingDeviceStencilOperationStencilOpKeep RenderingDeviceStencilOperation = 0
  RenderingDeviceStencilOperationStencilOpZero RenderingDeviceStencilOperation = 1
  RenderingDeviceStencilOperationStencilOpReplace RenderingDeviceStencilOperation = 2
  RenderingDeviceStencilOperationStencilOpIncrementAndClamp RenderingDeviceStencilOperation = 3
  RenderingDeviceStencilOperationStencilOpDecrementAndClamp RenderingDeviceStencilOperation = 4
  RenderingDeviceStencilOperationStencilOpInvert RenderingDeviceStencilOperation = 5
  RenderingDeviceStencilOperationStencilOpIncrementAndWrap RenderingDeviceStencilOperation = 6
  RenderingDeviceStencilOperationStencilOpDecrementAndWrap RenderingDeviceStencilOperation = 7
  RenderingDeviceStencilOperationStencilOpMax RenderingDeviceStencilOperation = 8
)

type RenderingDeviceCompareOperator int
const (
  RenderingDeviceCompareOperatorCompareOpNever RenderingDeviceCompareOperator = 0
  RenderingDeviceCompareOperatorCompareOpLess RenderingDeviceCompareOperator = 1
  RenderingDeviceCompareOperatorCompareOpEqual RenderingDeviceCompareOperator = 2
  RenderingDeviceCompareOperatorCompareOpLessOrEqual RenderingDeviceCompareOperator = 3
  RenderingDeviceCompareOperatorCompareOpGreater RenderingDeviceCompareOperator = 4
  RenderingDeviceCompareOperatorCompareOpNotEqual RenderingDeviceCompareOperator = 5
  RenderingDeviceCompareOperatorCompareOpGreaterOrEqual RenderingDeviceCompareOperator = 6
  RenderingDeviceCompareOperatorCompareOpAlways RenderingDeviceCompareOperator = 7
  RenderingDeviceCompareOperatorCompareOpMax RenderingDeviceCompareOperator = 8
)

type RenderingDeviceLogicOperation int
const (
  RenderingDeviceLogicOperationLogicOpClear RenderingDeviceLogicOperation = 0
  RenderingDeviceLogicOperationLogicOpAnd RenderingDeviceLogicOperation = 1
  RenderingDeviceLogicOperationLogicOpAndReverse RenderingDeviceLogicOperation = 2
  RenderingDeviceLogicOperationLogicOpCopy RenderingDeviceLogicOperation = 3
  RenderingDeviceLogicOperationLogicOpAndInverted RenderingDeviceLogicOperation = 4
  RenderingDeviceLogicOperationLogicOpNoOp RenderingDeviceLogicOperation = 5
  RenderingDeviceLogicOperationLogicOpXor RenderingDeviceLogicOperation = 6
  RenderingDeviceLogicOperationLogicOpOr RenderingDeviceLogicOperation = 7
  RenderingDeviceLogicOperationLogicOpNor RenderingDeviceLogicOperation = 8
  RenderingDeviceLogicOperationLogicOpEquivalent RenderingDeviceLogicOperation = 9
  RenderingDeviceLogicOperationLogicOpInvert RenderingDeviceLogicOperation = 10
  RenderingDeviceLogicOperationLogicOpOrReverse RenderingDeviceLogicOperation = 11
  RenderingDeviceLogicOperationLogicOpCopyInverted RenderingDeviceLogicOperation = 12
  RenderingDeviceLogicOperationLogicOpOrInverted RenderingDeviceLogicOperation = 13
  RenderingDeviceLogicOperationLogicOpNand RenderingDeviceLogicOperation = 14
  RenderingDeviceLogicOperationLogicOpSet RenderingDeviceLogicOperation = 15
  RenderingDeviceLogicOperationLogicOpMax RenderingDeviceLogicOperation = 16
)

type RenderingDeviceBlendFactor int
const (
  RenderingDeviceBlendFactorBlendFactorZero RenderingDeviceBlendFactor = 0
  RenderingDeviceBlendFactorBlendFactorOne RenderingDeviceBlendFactor = 1
  RenderingDeviceBlendFactorBlendFactorSrcColor RenderingDeviceBlendFactor = 2
  RenderingDeviceBlendFactorBlendFactorOneMinusSrcColor RenderingDeviceBlendFactor = 3
  RenderingDeviceBlendFactorBlendFactorDstColor RenderingDeviceBlendFactor = 4
  RenderingDeviceBlendFactorBlendFactorOneMinusDstColor RenderingDeviceBlendFactor = 5
  RenderingDeviceBlendFactorBlendFactorSrcAlpha RenderingDeviceBlendFactor = 6
  RenderingDeviceBlendFactorBlendFactorOneMinusSrcAlpha RenderingDeviceBlendFactor = 7
  RenderingDeviceBlendFactorBlendFactorDstAlpha RenderingDeviceBlendFactor = 8
  RenderingDeviceBlendFactorBlendFactorOneMinusDstAlpha RenderingDeviceBlendFactor = 9
  RenderingDeviceBlendFactorBlendFactorConstantColor RenderingDeviceBlendFactor = 10
  RenderingDeviceBlendFactorBlendFactorOneMinusConstantColor RenderingDeviceBlendFactor = 11
  RenderingDeviceBlendFactorBlendFactorConstantAlpha RenderingDeviceBlendFactor = 12
  RenderingDeviceBlendFactorBlendFactorOneMinusConstantAlpha RenderingDeviceBlendFactor = 13
  RenderingDeviceBlendFactorBlendFactorSrcAlphaSaturate RenderingDeviceBlendFactor = 14
  RenderingDeviceBlendFactorBlendFactorSrc1Color RenderingDeviceBlendFactor = 15
  RenderingDeviceBlendFactorBlendFactorOneMinusSrc1Color RenderingDeviceBlendFactor = 16
  RenderingDeviceBlendFactorBlendFactorSrc1Alpha RenderingDeviceBlendFactor = 17
  RenderingDeviceBlendFactorBlendFactorOneMinusSrc1Alpha RenderingDeviceBlendFactor = 18
  RenderingDeviceBlendFactorBlendFactorMax RenderingDeviceBlendFactor = 19
)

type RenderingDeviceBlendOperation int
const (
  RenderingDeviceBlendOperationBlendOpAdd RenderingDeviceBlendOperation = 0
  RenderingDeviceBlendOperationBlendOpSubtract RenderingDeviceBlendOperation = 1
  RenderingDeviceBlendOperationBlendOpReverseSubtract RenderingDeviceBlendOperation = 2
  RenderingDeviceBlendOperationBlendOpMinimum RenderingDeviceBlendOperation = 3
  RenderingDeviceBlendOperationBlendOpMaximum RenderingDeviceBlendOperation = 4
  RenderingDeviceBlendOperationBlendOpMax RenderingDeviceBlendOperation = 5
)

type RenderingDevicePipelineDynamicStateFlags int
const (
  RenderingDevicePipelineDynamicStateFlagsDynamicStateLineWidth RenderingDevicePipelineDynamicStateFlags = 1
  RenderingDevicePipelineDynamicStateFlagsDynamicStateDepthBias RenderingDevicePipelineDynamicStateFlags = 2
  RenderingDevicePipelineDynamicStateFlagsDynamicStateBlendConstants RenderingDevicePipelineDynamicStateFlags = 4
  RenderingDevicePipelineDynamicStateFlagsDynamicStateDepthBounds RenderingDevicePipelineDynamicStateFlags = 8
  RenderingDevicePipelineDynamicStateFlagsDynamicStateStencilCompareMask RenderingDevicePipelineDynamicStateFlags = 16
  RenderingDevicePipelineDynamicStateFlagsDynamicStateStencilWriteMask RenderingDevicePipelineDynamicStateFlags = 32
  RenderingDevicePipelineDynamicStateFlagsDynamicStateStencilReference RenderingDevicePipelineDynamicStateFlags = 64
)

type RenderingDeviceInitialAction int
const (
  RenderingDeviceInitialActionInitialActionClear RenderingDeviceInitialAction = 0
  RenderingDeviceInitialActionInitialActionClearRegion RenderingDeviceInitialAction = 1
  RenderingDeviceInitialActionInitialActionClearRegionContinue RenderingDeviceInitialAction = 2
  RenderingDeviceInitialActionInitialActionKeep RenderingDeviceInitialAction = 3
  RenderingDeviceInitialActionInitialActionDrop RenderingDeviceInitialAction = 4
  RenderingDeviceInitialActionInitialActionContinue RenderingDeviceInitialAction = 5
  RenderingDeviceInitialActionInitialActionMax RenderingDeviceInitialAction = 6
)

type RenderingDeviceFinalAction int
const (
  RenderingDeviceFinalActionFinalActionRead RenderingDeviceFinalAction = 0
  RenderingDeviceFinalActionFinalActionDiscard RenderingDeviceFinalAction = 1
  RenderingDeviceFinalActionFinalActionContinue RenderingDeviceFinalAction = 2
  RenderingDeviceFinalActionFinalActionMax RenderingDeviceFinalAction = 3
)

type RenderingDeviceShaderStage int
const (
  RenderingDeviceShaderStageShaderStageVertex RenderingDeviceShaderStage = 0
  RenderingDeviceShaderStageShaderStageFragment RenderingDeviceShaderStage = 1
  RenderingDeviceShaderStageShaderStageTesselationControl RenderingDeviceShaderStage = 2
  RenderingDeviceShaderStageShaderStageTesselationEvaluation RenderingDeviceShaderStage = 3
  RenderingDeviceShaderStageShaderStageCompute RenderingDeviceShaderStage = 4
  RenderingDeviceShaderStageShaderStageMax RenderingDeviceShaderStage = 5
  RenderingDeviceShaderStageShaderStageVertexBit RenderingDeviceShaderStage = 1
  RenderingDeviceShaderStageShaderStageFragmentBit RenderingDeviceShaderStage = 2
  RenderingDeviceShaderStageShaderStageTesselationControlBit RenderingDeviceShaderStage = 4
  RenderingDeviceShaderStageShaderStageTesselationEvaluationBit RenderingDeviceShaderStage = 8
  RenderingDeviceShaderStageShaderStageComputeBit RenderingDeviceShaderStage = 16
)

type RenderingDeviceShaderLanguage int
const (
  RenderingDeviceShaderLanguageShaderLanguageGlsl RenderingDeviceShaderLanguage = 0
  RenderingDeviceShaderLanguageShaderLanguageHlsl RenderingDeviceShaderLanguage = 1
)

type RenderingDevicePipelineSpecializationConstantType int
const (
  RenderingDevicePipelineSpecializationConstantTypePipelineSpecializationConstantTypeBool RenderingDevicePipelineSpecializationConstantType = 0
  RenderingDevicePipelineSpecializationConstantTypePipelineSpecializationConstantTypeInt RenderingDevicePipelineSpecializationConstantType = 1
  RenderingDevicePipelineSpecializationConstantTypePipelineSpecializationConstantTypeFloat RenderingDevicePipelineSpecializationConstantType = 2
)

type RenderingDeviceLimit int
const (
  RenderingDeviceLimitLimitMaxBoundUniformSets RenderingDeviceLimit = 0
  RenderingDeviceLimitLimitMaxFramebufferColorAttachments RenderingDeviceLimit = 1
  RenderingDeviceLimitLimitMaxTexturesPerUniformSet RenderingDeviceLimit = 2
  RenderingDeviceLimitLimitMaxSamplersPerUniformSet RenderingDeviceLimit = 3
  RenderingDeviceLimitLimitMaxStorageBuffersPerUniformSet RenderingDeviceLimit = 4
  RenderingDeviceLimitLimitMaxStorageImagesPerUniformSet RenderingDeviceLimit = 5
  RenderingDeviceLimitLimitMaxUniformBuffersPerUniformSet RenderingDeviceLimit = 6
  RenderingDeviceLimitLimitMaxDrawIndexedIndex RenderingDeviceLimit = 7
  RenderingDeviceLimitLimitMaxFramebufferHeight RenderingDeviceLimit = 8
  RenderingDeviceLimitLimitMaxFramebufferWidth RenderingDeviceLimit = 9
  RenderingDeviceLimitLimitMaxTextureArrayLayers RenderingDeviceLimit = 10
  RenderingDeviceLimitLimitMaxTextureSize1D RenderingDeviceLimit = 11
  RenderingDeviceLimitLimitMaxTextureSize2D RenderingDeviceLimit = 12
  RenderingDeviceLimitLimitMaxTextureSize3D RenderingDeviceLimit = 13
  RenderingDeviceLimitLimitMaxTextureSizeCube RenderingDeviceLimit = 14
  RenderingDeviceLimitLimitMaxTexturesPerShaderStage RenderingDeviceLimit = 15
  RenderingDeviceLimitLimitMaxSamplersPerShaderStage RenderingDeviceLimit = 16
  RenderingDeviceLimitLimitMaxStorageBuffersPerShaderStage RenderingDeviceLimit = 17
  RenderingDeviceLimitLimitMaxStorageImagesPerShaderStage RenderingDeviceLimit = 18
  RenderingDeviceLimitLimitMaxUniformBuffersPerShaderStage RenderingDeviceLimit = 19
  RenderingDeviceLimitLimitMaxPushConstantSize RenderingDeviceLimit = 20
  RenderingDeviceLimitLimitMaxUniformBufferSize RenderingDeviceLimit = 21
  RenderingDeviceLimitLimitMaxVertexInputAttributeOffset RenderingDeviceLimit = 22
  RenderingDeviceLimitLimitMaxVertexInputAttributes RenderingDeviceLimit = 23
  RenderingDeviceLimitLimitMaxVertexInputBindings RenderingDeviceLimit = 24
  RenderingDeviceLimitLimitMaxVertexInputBindingStride RenderingDeviceLimit = 25
  RenderingDeviceLimitLimitMinUniformBufferOffsetAlignment RenderingDeviceLimit = 26
  RenderingDeviceLimitLimitMaxComputeSharedMemorySize RenderingDeviceLimit = 27
  RenderingDeviceLimitLimitMaxComputeWorkgroupCountX RenderingDeviceLimit = 28
  RenderingDeviceLimitLimitMaxComputeWorkgroupCountY RenderingDeviceLimit = 29
  RenderingDeviceLimitLimitMaxComputeWorkgroupCountZ RenderingDeviceLimit = 30
  RenderingDeviceLimitLimitMaxComputeWorkgroupInvocations RenderingDeviceLimit = 31
  RenderingDeviceLimitLimitMaxComputeWorkgroupSizeX RenderingDeviceLimit = 32
  RenderingDeviceLimitLimitMaxComputeWorkgroupSizeY RenderingDeviceLimit = 33
  RenderingDeviceLimitLimitMaxComputeWorkgroupSizeZ RenderingDeviceLimit = 34
  RenderingDeviceLimitLimitMaxViewportDimensionsX RenderingDeviceLimit = 35
  RenderingDeviceLimitLimitMaxViewportDimensionsY RenderingDeviceLimit = 36
)

type RenderingDeviceMemoryType int
const (
  RenderingDeviceMemoryTypeMemoryTextures RenderingDeviceMemoryType = 0
  RenderingDeviceMemoryTypeMemoryBuffers RenderingDeviceMemoryType = 1
  RenderingDeviceMemoryTypeMemoryTotal RenderingDeviceMemoryType = 2
)

func (me *RenderingDevice) Type() gdc.VariantType {
  return gdc.VariantTypeObject
}

func (me *RenderingDevice) AsTypePtr() gdc.TypePtr {
  return gdc.TypePtr(me.obj)
}

func (me *RenderingDevice) AsCTypePtr() gdc.ConstTypePtr {
  return gdc.ConstTypePtr(me.obj)
}


// Methods

func  (me *RenderingDevice) TextureCreate(format RDTextureFormat, view RDTextureView, data PackedByteArray, )  {
  panic("TODO: implement")
}

func  (me *RenderingDevice) TextureCreateShared(view RDTextureView, with_texture RID, )  {
  panic("TODO: implement")
}

func  (me *RenderingDevice) TextureCreateSharedFromSlice(view RDTextureView, with_texture RID, layer int, mipmap int, mipmaps int, slice_type RenderingDeviceTextureSliceType, )  {
  panic("TODO: implement")
}

func  (me *RenderingDevice) TextureUpdate(texture RID, layer int, data PackedByteArray, post_barrier RenderingDeviceBarrierMask, )  {
  panic("TODO: implement")
}

func  (me *RenderingDevice) TextureGetData(texture RID, layer int, )  {
  panic("TODO: implement")
}

func  (me *RenderingDevice) TextureIsFormatSupportedForUsage(format RenderingDeviceDataFormat, usage_flags RenderingDeviceTextureUsageBits, )  {
  panic("TODO: implement")
}

func  (me *RenderingDevice) TextureIsShared(texture RID, )  {
  panic("TODO: implement")
}

func  (me *RenderingDevice) TextureIsValid(texture RID, )  {
  panic("TODO: implement")
}

func  (me *RenderingDevice) TextureCopy(from_texture RID, to_texture RID, from_pos Vector3, to_pos Vector3, size Vector3, src_mipmap int, dst_mipmap int, src_layer int, dst_layer int, post_barrier RenderingDeviceBarrierMask, )  {
  panic("TODO: implement")
}

func  (me *RenderingDevice) TextureClear(texture RID, color Color, base_mipmap int, mipmap_count int, base_layer int, layer_count int, post_barrier RenderingDeviceBarrierMask, )  {
  panic("TODO: implement")
}

func  (me *RenderingDevice) TextureResolveMultisample(from_texture RID, to_texture RID, post_barrier RenderingDeviceBarrierMask, )  {
  panic("TODO: implement")
}

func  (me *RenderingDevice) TextureGetNativeHandle(texture RID, )  {
  panic("TODO: implement")
}

func  (me *RenderingDevice) FramebufferFormatCreate(attachments RDAttachmentFormat, view_count int, )  {
  panic("TODO: implement")
}

func  (me *RenderingDevice) FramebufferFormatCreateMultipass(attachments RDAttachmentFormat, passes RDFramebufferPass, view_count int, )  {
  panic("TODO: implement")
}

func  (me *RenderingDevice) FramebufferFormatCreateEmpty(samples RenderingDeviceTextureSamples, )  {
  panic("TODO: implement")
}

func  (me *RenderingDevice) FramebufferFormatGetTextureSamples(format int, render_pass int, )  {
  panic("TODO: implement")
}

func  (me *RenderingDevice) FramebufferCreate(textures RID, validate_with_format int, view_count int, )  {
  panic("TODO: implement")
}

func  (me *RenderingDevice) FramebufferCreateMultipass(textures RID, passes RDFramebufferPass, validate_with_format int, view_count int, )  {
  panic("TODO: implement")
}

func  (me *RenderingDevice) FramebufferCreateEmpty(size Vector2i, samples RenderingDeviceTextureSamples, validate_with_format int, )  {
  panic("TODO: implement")
}

func  (me *RenderingDevice) FramebufferGetFormat(framebuffer RID, )  {
  panic("TODO: implement")
}

func  (me *RenderingDevice) FramebufferIsValid(framebuffer RID, )  {
  panic("TODO: implement")
}

func  (me *RenderingDevice) SamplerCreate(state RDSamplerState, )  {
  panic("TODO: implement")
}

func  (me *RenderingDevice) SamplerIsFormatSupportedForFilter(format RenderingDeviceDataFormat, sampler_filter RenderingDeviceSamplerFilter, )  {
  panic("TODO: implement")
}

func  (me *RenderingDevice) VertexBufferCreate(size_bytes int, data PackedByteArray, use_as_storage bool, )  {
  panic("TODO: implement")
}

func  (me *RenderingDevice) VertexFormatCreate(vertex_descriptions RDVertexAttribute, )  {
  panic("TODO: implement")
}

func  (me *RenderingDevice) VertexArrayCreate(vertex_count int, vertex_format int, src_buffers RID, offsets PackedInt64Array, )  {
  panic("TODO: implement")
}

func  (me *RenderingDevice) IndexBufferCreate(size_indices int, format RenderingDeviceIndexBufferFormat, data PackedByteArray, use_restart_indices bool, )  {
  panic("TODO: implement")
}

func  (me *RenderingDevice) IndexArrayCreate(index_buffer RID, index_offset int, index_count int, )  {
  panic("TODO: implement")
}

func  (me *RenderingDevice) ShaderCompileSpirvFromSource(shader_source RDShaderSource, allow_cache bool, )  {
  panic("TODO: implement")
}

func  (me *RenderingDevice) ShaderCompileBinaryFromSpirv(spirv_data RDShaderSPIRV, name String, )  {
  panic("TODO: implement")
}

func  (me *RenderingDevice) ShaderCreateFromSpirv(spirv_data RDShaderSPIRV, name String, )  {
  panic("TODO: implement")
}

func  (me *RenderingDevice) ShaderCreateFromBytecode(binary_data PackedByteArray, )  {
  panic("TODO: implement")
}

func  (me *RenderingDevice) ShaderGetVertexInputAttributeMask(shader RID, )  {
  panic("TODO: implement")
}

func  (me *RenderingDevice) UniformBufferCreate(size_bytes int, data PackedByteArray, )  {
  panic("TODO: implement")
}

func  (me *RenderingDevice) StorageBufferCreate(size_bytes int, data PackedByteArray, usage RenderingDeviceStorageBufferUsage, )  {
  panic("TODO: implement")
}

func  (me *RenderingDevice) TextureBufferCreate(size_bytes int, format RenderingDeviceDataFormat, data PackedByteArray, )  {
  panic("TODO: implement")
}

func  (me *RenderingDevice) UniformSetCreate(uniforms RDUniform, shader RID, shader_set int, )  {
  panic("TODO: implement")
}

func  (me *RenderingDevice) UniformSetIsValid(uniform_set RID, )  {
  panic("TODO: implement")
}

func  (me *RenderingDevice) BufferUpdate(buffer RID, offset int, size_bytes int, data PackedByteArray, post_barrier RenderingDeviceBarrierMask, )  {
  panic("TODO: implement")
}

func  (me *RenderingDevice) BufferClear(buffer RID, offset int, size_bytes int, post_barrier RenderingDeviceBarrierMask, )  {
  panic("TODO: implement")
}

func  (me *RenderingDevice) BufferGetData(buffer RID, offset_bytes int, size_bytes int, )  {
  panic("TODO: implement")
}

func  (me *RenderingDevice) RenderPipelineCreate(shader RID, framebuffer_format int, vertex_format int, primitive RenderingDeviceRenderPrimitive, rasterization_state RDPipelineRasterizationState, multisample_state RDPipelineMultisampleState, stencil_state RDPipelineDepthStencilState, color_blend_state RDPipelineColorBlendState, dynamic_state_flags RenderingDevicePipelineDynamicStateFlags, for_render_pass int, specialization_constants RDPipelineSpecializationConstant, )  {
  panic("TODO: implement")
}

func  (me *RenderingDevice) RenderPipelineIsValid(render_pipeline RID, )  {
  panic("TODO: implement")
}

func  (me *RenderingDevice) ComputePipelineCreate(shader RID, specialization_constants RDPipelineSpecializationConstant, )  {
  panic("TODO: implement")
}

func  (me *RenderingDevice) ComputePipelineIsValid(compute_pipeline RID, )  {
  panic("TODO: implement")
}

func  (me *RenderingDevice) ScreenGetWidth(screen int, )  {
  panic("TODO: implement")
}

func  (me *RenderingDevice) ScreenGetHeight(screen int, )  {
  panic("TODO: implement")
}

func  (me *RenderingDevice) ScreenGetFramebufferFormat()  {
  panic("TODO: implement")
}

func  (me *RenderingDevice) DrawListBeginForScreen(screen int, clear_color Color, )  {
  panic("TODO: implement")
}

func  (me *RenderingDevice) DrawListBegin(framebuffer RID, initial_color_action RenderingDeviceInitialAction, final_color_action RenderingDeviceFinalAction, initial_depth_action RenderingDeviceInitialAction, final_depth_action RenderingDeviceFinalAction, clear_color_values PackedColorArray, clear_depth float32, clear_stencil int, region Rect2, storage_textures RID, )  {
  panic("TODO: implement")
}

func  (me *RenderingDevice) DrawListBeginSplit(framebuffer RID, splits int, initial_color_action RenderingDeviceInitialAction, final_color_action RenderingDeviceFinalAction, initial_depth_action RenderingDeviceInitialAction, final_depth_action RenderingDeviceFinalAction, clear_color_values PackedColorArray, clear_depth float32, clear_stencil int, region Rect2, storage_textures RID, )  {
  panic("TODO: implement")
}

func  (me *RenderingDevice) DrawListSetBlendConstants(draw_list int, color Color, )  {
  panic("TODO: implement")
}

func  (me *RenderingDevice) DrawListBindRenderPipeline(draw_list int, render_pipeline RID, )  {
  panic("TODO: implement")
}

func  (me *RenderingDevice) DrawListBindUniformSet(draw_list int, uniform_set RID, set_index int, )  {
  panic("TODO: implement")
}

func  (me *RenderingDevice) DrawListBindVertexArray(draw_list int, vertex_array RID, )  {
  panic("TODO: implement")
}

func  (me *RenderingDevice) DrawListBindIndexArray(draw_list int, index_array RID, )  {
  panic("TODO: implement")
}

func  (me *RenderingDevice) DrawListSetPushConstant(draw_list int, buffer PackedByteArray, size_bytes int, )  {
  panic("TODO: implement")
}

func  (me *RenderingDevice) DrawListDraw(draw_list int, use_indices bool, instances int, procedural_vertex_count int, )  {
  panic("TODO: implement")
}

func  (me *RenderingDevice) DrawListEnableScissor(draw_list int, rect Rect2, )  {
  panic("TODO: implement")
}

func  (me *RenderingDevice) DrawListDisableScissor(draw_list int, )  {
  panic("TODO: implement")
}

func  (me *RenderingDevice) DrawListSwitchToNextPass()  {
  panic("TODO: implement")
}

func  (me *RenderingDevice) DrawListSwitchToNextPassSplit(splits int, )  {
  panic("TODO: implement")
}

func  (me *RenderingDevice) DrawListEnd(post_barrier RenderingDeviceBarrierMask, )  {
  panic("TODO: implement")
}

func  (me *RenderingDevice) ComputeListBegin(allow_draw_overlap bool, )  {
  panic("TODO: implement")
}

func  (me *RenderingDevice) ComputeListBindComputePipeline(compute_list int, compute_pipeline RID, )  {
  panic("TODO: implement")
}

func  (me *RenderingDevice) ComputeListSetPushConstant(compute_list int, buffer PackedByteArray, size_bytes int, )  {
  panic("TODO: implement")
}

func  (me *RenderingDevice) ComputeListBindUniformSet(compute_list int, uniform_set RID, set_index int, )  {
  panic("TODO: implement")
}

func  (me *RenderingDevice) ComputeListDispatch(compute_list int, x_groups int, y_groups int, z_groups int, )  {
  panic("TODO: implement")
}

func  (me *RenderingDevice) ComputeListAddBarrier(compute_list int, )  {
  panic("TODO: implement")
}

func  (me *RenderingDevice) ComputeListEnd(post_barrier RenderingDeviceBarrierMask, )  {
  panic("TODO: implement")
}

func  (me *RenderingDevice) FreeRid(rid RID, )  {
  panic("TODO: implement")
}

func  (me *RenderingDevice) CaptureTimestamp(name String, )  {
  panic("TODO: implement")
}

func  (me *RenderingDevice) GetCapturedTimestampsCount()  {
  panic("TODO: implement")
}

func  (me *RenderingDevice) GetCapturedTimestampsFrame()  {
  panic("TODO: implement")
}

func  (me *RenderingDevice) GetCapturedTimestampGpuTime(index int, )  {
  panic("TODO: implement")
}

func  (me *RenderingDevice) GetCapturedTimestampCpuTime(index int, )  {
  panic("TODO: implement")
}

func  (me *RenderingDevice) GetCapturedTimestampName(index int, )  {
  panic("TODO: implement")
}

func  (me *RenderingDevice) LimitGet(limit RenderingDeviceLimit, )  {
  panic("TODO: implement")
}

func  (me *RenderingDevice) GetFrameDelay()  {
  panic("TODO: implement")
}

func  (me *RenderingDevice) Submit()  {
  panic("TODO: implement")
}

func  (me *RenderingDevice) Sync()  {
  panic("TODO: implement")
}

func  (me *RenderingDevice) Barrier(from RenderingDeviceBarrierMask, to RenderingDeviceBarrierMask, )  {
  panic("TODO: implement")
}

func  (me *RenderingDevice) FullBarrier()  {
  panic("TODO: implement")
}

func  (me *RenderingDevice) CreateLocalDevice()  {
  panic("TODO: implement")
}

func  (me *RenderingDevice) SetResourceName(id RID, name String, )  {
  panic("TODO: implement")
}

func  (me *RenderingDevice) DrawCommandBeginLabel(name String, color Color, )  {
  panic("TODO: implement")
}

func  (me *RenderingDevice) DrawCommandInsertLabel(name String, color Color, )  {
  panic("TODO: implement")
}

func  (me *RenderingDevice) DrawCommandEndLabel()  {
  panic("TODO: implement")
}

func  (me *RenderingDevice) GetDeviceVendorName()  {
  panic("TODO: implement")
}

func  (me *RenderingDevice) GetDeviceName()  {
  panic("TODO: implement")
}

func  (me *RenderingDevice) GetDevicePipelineCacheUuid()  {
  panic("TODO: implement")
}

func  (me *RenderingDevice) GetMemoryUsage(type_ RenderingDeviceMemoryType, )  {
  panic("TODO: implement")
}

func  (me *RenderingDevice) GetDriverResource(resource RenderingDeviceDriverResource, rid RID, index int, )  {
  panic("TODO: implement")
}

// TODO: properties (class)

// TODO: signals (class)
