// Code generated by cgen. DO NOT EDIT.
#pragma once

#include <gdextension_interface.h>

void* callGetProcAddress(GDExtensionInterfaceGetProcAddress getProcAddr, const char* procName);


GDExtensionVariantPtr callArrayOperatorIndex(GDExtensionInterfaceArrayOperatorIndex fn, GDExtensionTypePtr pSelf, GDExtensionInt pIndex);

GDExtensionVariantPtr callArrayOperatorIndexConst(GDExtensionInterfaceArrayOperatorIndexConst fn, GDExtensionConstTypePtr pSelf, GDExtensionInt pIndex);

void callArrayRef(GDExtensionInterfaceArrayRef fn, GDExtensionTypePtr pSelf, GDExtensionConstTypePtr pFrom);

void callArraySetTyped(GDExtensionInterfaceArraySetTyped fn, GDExtensionTypePtr pSelf, GDExtensionVariantType pType, GDExtensionConstStringNamePtr pClassName, GDExtensionConstVariantPtr pScript);

GDExtensionObjectPtr callClassdbConstructObject(GDExtensionInterfaceClassdbConstructObject fn, GDExtensionConstStringNamePtr pClassname);

 callClassdbGetClassTag(GDExtensionInterfaceClassdbGetClassTag fn, GDExtensionConstStringNamePtr pClassname);

const GDExtensionMethodBindPtr callClassdbGetMethodBind(GDExtensionInterfaceClassdbGetMethodBind fn, GDExtensionConstStringNamePtr pClassname, GDExtensionConstStringNamePtr pMethodname, GDExtensionInt pHash);

void callClassdbRegisterExtensionClass(GDExtensionInterfaceClassdbRegisterExtensionClass fn, GDExtensionClassLibraryPtr pLibrary, GDExtensionConstStringNamePtr pClassName, GDExtensionConstStringNamePtr pParentClassName, GDExtensionClassCreationInfo* pExtensionFuncs);

void callClassdbRegisterExtensionClassIntegerConstant(GDExtensionInterfaceClassdbRegisterExtensionClassIntegerConstant fn, GDExtensionClassLibraryPtr pLibrary, GDExtensionConstStringNamePtr pClassName, GDExtensionConstStringNamePtr pEnumName, GDExtensionConstStringNamePtr pConstantName, GDExtensionInt pConstantValue, GDExtensionBool pIsBitfield);

void callClassdbRegisterExtensionClassMethod(GDExtensionInterfaceClassdbRegisterExtensionClassMethod fn, GDExtensionClassLibraryPtr pLibrary, GDExtensionConstStringNamePtr pClassName, GDExtensionClassMethodInfo* pMethodInfo);

void callClassdbRegisterExtensionClassProperty(GDExtensionInterfaceClassdbRegisterExtensionClassProperty fn, GDExtensionClassLibraryPtr pLibrary, GDExtensionConstStringNamePtr pClassName, GDExtensionPropertyInfo* pInfo, GDExtensionConstStringNamePtr pSetter, GDExtensionConstStringNamePtr pGetter);

void callClassdbRegisterExtensionClassPropertyGroup(GDExtensionInterfaceClassdbRegisterExtensionClassPropertyGroup fn, GDExtensionClassLibraryPtr pLibrary, GDExtensionConstStringNamePtr pClassName, GDExtensionConstStringPtr pGroupName, GDExtensionConstStringPtr pPrefix);

void callClassdbRegisterExtensionClassPropertySubgroup(GDExtensionInterfaceClassdbRegisterExtensionClassPropertySubgroup fn, GDExtensionClassLibraryPtr pLibrary, GDExtensionConstStringNamePtr pClassName, GDExtensionConstStringPtr pSubgroupName, GDExtensionConstStringPtr pPrefix);

void callClassdbRegisterExtensionClassSignal(GDExtensionInterfaceClassdbRegisterExtensionClassSignal fn, GDExtensionClassLibraryPtr pLibrary, GDExtensionConstStringNamePtr pClassName, GDExtensionConstStringNamePtr pSignalName, GDExtensionPropertyInfo* pArgumentInfo, GDExtensionInt pArgumentCount);

void callClassdbUnregisterExtensionClass(GDExtensionInterfaceClassdbUnregisterExtensionClass fn, GDExtensionClassLibraryPtr pLibrary, GDExtensionConstStringNamePtr pClassName);

GDExtensionVariantPtr callDictionaryOperatorIndex(GDExtensionInterfaceDictionaryOperatorIndex fn, GDExtensionTypePtr pSelf, GDExtensionConstVariantPtr pKey);

GDExtensionVariantPtr callDictionaryOperatorIndexConst(GDExtensionInterfaceDictionaryOperatorIndexConst fn, GDExtensionConstTypePtr pSelf, GDExtensionConstVariantPtr pKey);

void callEditorAddPlugin(GDExtensionInterfaceEditorAddPlugin fn, GDExtensionConstStringNamePtr pClassName);

void callEditorRemovePlugin(GDExtensionInterfaceEditorRemovePlugin fn, GDExtensionConstStringNamePtr pClassName);

uint64_t callFileAccessGetBuffer(GDExtensionInterfaceFileAccessGetBuffer fn, GDExtensionConstObjectPtr pInstance, * pDst, uint64_t pLength);

void callFileAccessStoreBuffer(GDExtensionInterfaceFileAccessStoreBuffer fn, GDExtensionObjectPtr pInstance, const * pSrc, uint64_t pLength);

void callGetGodotVersion(GDExtensionInterfaceGetGodotVersion fn, GDExtensionGodotVersion* rGodotVersion);

void callGetLibraryPath(GDExtensionInterfaceGetLibraryPath fn, GDExtensionClassLibraryPtr pLibrary, GDExtensionUninitializedStringPtr rPath);

uint64_t callGetNativeStructSize(GDExtensionInterfaceGetNativeStructSize fn, GDExtensionConstStringNamePtr pName);

GDExtensionVariantFromTypeConstructorFunc callGetVariantFromTypeConstructor(GDExtensionInterfaceGetVariantFromTypeConstructor fn, GDExtensionVariantType pType);

GDExtensionTypeFromVariantConstructorFunc callGetVariantToTypeConstructor(GDExtensionInterfaceGetVariantToTypeConstructor fn, GDExtensionVariantType pType);

GDExtensionObjectPtr callGlobalGetSingleton(GDExtensionInterfaceGlobalGetSingleton fn, GDExtensionConstStringNamePtr pName);

 callMemAlloc(GDExtensionInterfaceMemAlloc fn, size_t pBytes);

void callMemFree(GDExtensionInterfaceMemFree fn,  pPtr);

 callMemRealloc(GDExtensionInterfaceMemRealloc fn,  pPtr, size_t pBytes);

GDExtensionObjectPtr callObjectCastTo(GDExtensionInterfaceObjectCastTo fn, GDExtensionConstObjectPtr pObject,  pClassTag);

void callObjectDestroy(GDExtensionInterfaceObjectDestroy fn, GDExtensionObjectPtr pO);

GDExtensionBool callObjectGetClassName(GDExtensionInterfaceObjectGetClassName fn, GDExtensionConstObjectPtr pObject, GDExtensionClassLibraryPtr pLibrary, GDExtensionUninitializedStringNamePtr rClassName);

 callObjectGetInstanceBinding(GDExtensionInterfaceObjectGetInstanceBinding fn, GDExtensionObjectPtr pO,  pToken, GDExtensionInstanceBindingCallbacks* pCallbacks);

GDExtensionObjectPtr callObjectGetInstanceFromId(GDExtensionInterfaceObjectGetInstanceFromId fn, GDObjectInstanceID pInstanceId);

GDObjectInstanceID callObjectGetInstanceId(GDExtensionInterfaceObjectGetInstanceId fn, GDExtensionConstObjectPtr pObject);

void callObjectMethodBindCall(GDExtensionInterfaceObjectMethodBindCall fn, GDExtensionMethodBindPtr pMethodBind, GDExtensionObjectPtr pInstance, const GDExtensionConstVariantPtr* pArgs, GDExtensionInt pArgCount, GDExtensionUninitializedVariantPtr rRet, GDExtensionCallError* rError);

void callObjectMethodBindPtrcall(GDExtensionInterfaceObjectMethodBindPtrcall fn, GDExtensionMethodBindPtr pMethodBind, GDExtensionObjectPtr pInstance, const GDExtensionConstTypePtr* pArgs, GDExtensionTypePtr rRet);

void callObjectSetInstance(GDExtensionInterfaceObjectSetInstance fn, GDExtensionObjectPtr pO, GDExtensionConstStringNamePtr pClassname, GDExtensionClassInstancePtr pInstance);

void callObjectSetInstanceBinding(GDExtensionInterfaceObjectSetInstanceBinding fn, GDExtensionObjectPtr pO,  pToken,  pBinding, GDExtensionInstanceBindingCallbacks* pCallbacks);

* callPackedByteArrayOperatorIndex(GDExtensionInterfacePackedByteArrayOperatorIndex fn, GDExtensionTypePtr pSelf, GDExtensionInt pIndex);

const * callPackedByteArrayOperatorIndexConst(GDExtensionInterfacePackedByteArrayOperatorIndexConst fn, GDExtensionConstTypePtr pSelf, GDExtensionInt pIndex);

GDExtensionTypePtr callPackedColorArrayOperatorIndex(GDExtensionInterfacePackedColorArrayOperatorIndex fn, GDExtensionTypePtr pSelf, GDExtensionInt pIndex);

GDExtensionTypePtr callPackedColorArrayOperatorIndexConst(GDExtensionInterfacePackedColorArrayOperatorIndexConst fn, GDExtensionConstTypePtr pSelf, GDExtensionInt pIndex);

* callPackedFloat32ArrayOperatorIndex(GDExtensionInterfacePackedFloat32ArrayOperatorIndex fn, GDExtensionTypePtr pSelf, GDExtensionInt pIndex);

const * callPackedFloat32ArrayOperatorIndexConst(GDExtensionInterfacePackedFloat32ArrayOperatorIndexConst fn, GDExtensionConstTypePtr pSelf, GDExtensionInt pIndex);

* callPackedFloat64ArrayOperatorIndex(GDExtensionInterfacePackedFloat64ArrayOperatorIndex fn, GDExtensionTypePtr pSelf, GDExtensionInt pIndex);

const * callPackedFloat64ArrayOperatorIndexConst(GDExtensionInterfacePackedFloat64ArrayOperatorIndexConst fn, GDExtensionConstTypePtr pSelf, GDExtensionInt pIndex);

* callPackedInt32ArrayOperatorIndex(GDExtensionInterfacePackedInt32ArrayOperatorIndex fn, GDExtensionTypePtr pSelf, GDExtensionInt pIndex);

const * callPackedInt32ArrayOperatorIndexConst(GDExtensionInterfacePackedInt32ArrayOperatorIndexConst fn, GDExtensionConstTypePtr pSelf, GDExtensionInt pIndex);

* callPackedInt64ArrayOperatorIndex(GDExtensionInterfacePackedInt64ArrayOperatorIndex fn, GDExtensionTypePtr pSelf, GDExtensionInt pIndex);

const * callPackedInt64ArrayOperatorIndexConst(GDExtensionInterfacePackedInt64ArrayOperatorIndexConst fn, GDExtensionConstTypePtr pSelf, GDExtensionInt pIndex);

GDExtensionStringPtr callPackedStringArrayOperatorIndex(GDExtensionInterfacePackedStringArrayOperatorIndex fn, GDExtensionTypePtr pSelf, GDExtensionInt pIndex);

GDExtensionStringPtr callPackedStringArrayOperatorIndexConst(GDExtensionInterfacePackedStringArrayOperatorIndexConst fn, GDExtensionConstTypePtr pSelf, GDExtensionInt pIndex);

GDExtensionTypePtr callPackedVector2ArrayOperatorIndex(GDExtensionInterfacePackedVector2ArrayOperatorIndex fn, GDExtensionTypePtr pSelf, GDExtensionInt pIndex);

GDExtensionTypePtr callPackedVector2ArrayOperatorIndexConst(GDExtensionInterfacePackedVector2ArrayOperatorIndexConst fn, GDExtensionConstTypePtr pSelf, GDExtensionInt pIndex);

GDExtensionTypePtr callPackedVector3ArrayOperatorIndex(GDExtensionInterfacePackedVector3ArrayOperatorIndex fn, GDExtensionTypePtr pSelf, GDExtensionInt pIndex);

GDExtensionTypePtr callPackedVector3ArrayOperatorIndexConst(GDExtensionInterfacePackedVector3ArrayOperatorIndexConst fn, GDExtensionConstTypePtr pSelf, GDExtensionInt pIndex);

void callPrintError(GDExtensionInterfacePrintError fn, const  pDescription, const  pFunction, const  pFile, int32_t pLine, GDExtensionBool pEditorNotify);

void callPrintErrorWithMessage(GDExtensionInterfacePrintErrorWithMessage fn, const  pDescription, const  pMessage, const  pFunction, const  pFile, int32_t pLine, GDExtensionBool pEditorNotify);

void callPrintScriptError(GDExtensionInterfacePrintScriptError fn, const  pDescription, const  pFunction, const  pFile, int32_t pLine, GDExtensionBool pEditorNotify);

void callPrintScriptErrorWithMessage(GDExtensionInterfacePrintScriptErrorWithMessage fn, const  pDescription, const  pMessage, const  pFunction, const  pFile, int32_t pLine, GDExtensionBool pEditorNotify);

void callPrintWarning(GDExtensionInterfacePrintWarning fn, const  pDescription, const  pFunction, const  pFile, int32_t pLine, GDExtensionBool pEditorNotify);

void callPrintWarningWithMessage(GDExtensionInterfacePrintWarningWithMessage fn, const  pDescription, const  pMessage, const  pFunction, const  pFile, int32_t pLine, GDExtensionBool pEditorNotify);

GDExtensionObjectPtr callRefGetObject(GDExtensionInterfaceRefGetObject fn, GDExtensionConstRefPtr pRef);

void callRefSetObject(GDExtensionInterfaceRefSetObject fn, GDExtensionRefPtr pRef, GDExtensionObjectPtr pObject);

GDExtensionScriptInstancePtr callScriptInstanceCreate(GDExtensionInterfaceScriptInstanceCreate fn, GDExtensionScriptInstanceInfo* pInfo, GDExtensionScriptInstanceDataPtr pInstanceData);

void callStringNewWithLatin1Chars(GDExtensionInterfaceStringNewWithLatin1Chars fn, GDExtensionUninitializedStringPtr rDest, const  pContents);

void callStringNewWithLatin1CharsAndLen(GDExtensionInterfaceStringNewWithLatin1CharsAndLen fn, GDExtensionUninitializedStringPtr rDest, const  pContents, GDExtensionInt pSize);

void callStringNewWithUtf16Chars(GDExtensionInterfaceStringNewWithUtf16Chars fn, GDExtensionUninitializedStringPtr rDest, const * pContents);

void callStringNewWithUtf16CharsAndLen(GDExtensionInterfaceStringNewWithUtf16CharsAndLen fn, GDExtensionUninitializedStringPtr rDest, const * pContents, GDExtensionInt pSize);

void callStringNewWithUtf32Chars(GDExtensionInterfaceStringNewWithUtf32Chars fn, GDExtensionUninitializedStringPtr rDest, const * pContents);

void callStringNewWithUtf32CharsAndLen(GDExtensionInterfaceStringNewWithUtf32CharsAndLen fn, GDExtensionUninitializedStringPtr rDest, const * pContents, GDExtensionInt pSize);

void callStringNewWithUtf8Chars(GDExtensionInterfaceStringNewWithUtf8Chars fn, GDExtensionUninitializedStringPtr rDest, const  pContents);

void callStringNewWithUtf8CharsAndLen(GDExtensionInterfaceStringNewWithUtf8CharsAndLen fn, GDExtensionUninitializedStringPtr rDest, const  pContents, GDExtensionInt pSize);

void callStringNewWithWideChars(GDExtensionInterfaceStringNewWithWideChars fn, GDExtensionUninitializedStringPtr rDest, const * pContents);

void callStringNewWithWideCharsAndLen(GDExtensionInterfaceStringNewWithWideCharsAndLen fn, GDExtensionUninitializedStringPtr rDest, const * pContents, GDExtensionInt pSize);

* callStringOperatorIndex(GDExtensionInterfaceStringOperatorIndex fn, GDExtensionStringPtr pSelf, GDExtensionInt pIndex);

const * callStringOperatorIndexConst(GDExtensionInterfaceStringOperatorIndexConst fn, GDExtensionConstStringPtr pSelf, GDExtensionInt pIndex);

void callStringOperatorPlusEqC32Str(GDExtensionInterfaceStringOperatorPlusEqC32str fn, GDExtensionStringPtr pSelf, const * pB);

void callStringOperatorPlusEqChar(GDExtensionInterfaceStringOperatorPlusEqChar fn, GDExtensionStringPtr pSelf, char32_t pB);

void callStringOperatorPlusEqCstr(GDExtensionInterfaceStringOperatorPlusEqCstr fn, GDExtensionStringPtr pSelf, const  pB);

void callStringOperatorPlusEqString(GDExtensionInterfaceStringOperatorPlusEqString fn, GDExtensionStringPtr pSelf, GDExtensionConstStringPtr pB);

void callStringOperatorPlusEqWcstr(GDExtensionInterfaceStringOperatorPlusEqWcstr fn, GDExtensionStringPtr pSelf, const * pB);

GDExtensionInt callStringToLatin1Chars(GDExtensionInterfaceStringToLatin1Chars fn, GDExtensionConstStringPtr pSelf,  rText, GDExtensionInt pMaxWriteLength);

GDExtensionInt callStringToUtf16Chars(GDExtensionInterfaceStringToUtf16Chars fn, GDExtensionConstStringPtr pSelf, * rText, GDExtensionInt pMaxWriteLength);

GDExtensionInt callStringToUtf32Chars(GDExtensionInterfaceStringToUtf32Chars fn, GDExtensionConstStringPtr pSelf, * rText, GDExtensionInt pMaxWriteLength);

GDExtensionInt callStringToUtf8Chars(GDExtensionInterfaceStringToUtf8Chars fn, GDExtensionConstStringPtr pSelf,  rText, GDExtensionInt pMaxWriteLength);

GDExtensionInt callStringToWideChars(GDExtensionInterfaceStringToWideChars fn, GDExtensionConstStringPtr pSelf, * rText, GDExtensionInt pMaxWriteLength);

GDExtensionBool callVariantBooleanize(GDExtensionInterfaceVariantBooleanize fn, GDExtensionConstVariantPtr pSelf);

void callVariantCall(GDExtensionInterfaceVariantCall fn, GDExtensionVariantPtr pSelf, GDExtensionConstStringNamePtr pMethod, const GDExtensionConstVariantPtr* pArgs, GDExtensionInt pArgumentCount, GDExtensionUninitializedVariantPtr rReturn, GDExtensionCallError* rError);

void callVariantCallStatic(GDExtensionInterfaceVariantCallStatic fn, GDExtensionVariantType pType, GDExtensionConstStringNamePtr pMethod, const GDExtensionConstVariantPtr* pArgs, GDExtensionInt pArgumentCount, GDExtensionUninitializedVariantPtr rReturn, GDExtensionCallError* rError);

GDExtensionBool callVariantCanConvert(GDExtensionInterfaceVariantCanConvert fn, GDExtensionVariantType pFrom, GDExtensionVariantType pTo);

GDExtensionBool callVariantCanConvertStrict(GDExtensionInterfaceVariantCanConvertStrict fn, GDExtensionVariantType pFrom, GDExtensionVariantType pTo);

void callVariantConstruct(GDExtensionInterfaceVariantConstruct fn, GDExtensionVariantType pType, GDExtensionUninitializedVariantPtr rBase, const GDExtensionConstVariantPtr* pArgs, int32_t pArgumentCount, GDExtensionCallError* rError);

void callVariantDestroy(GDExtensionInterfaceVariantDestroy fn, GDExtensionVariantPtr pSelf);

void callVariantDuplicate(GDExtensionInterfaceVariantDuplicate fn, GDExtensionConstVariantPtr pSelf, GDExtensionVariantPtr rRet, GDExtensionBool pDeep);

void callVariantEvaluate(GDExtensionInterfaceVariantEvaluate fn, GDExtensionVariantOperator pOp, GDExtensionConstVariantPtr pA, GDExtensionConstVariantPtr pB, GDExtensionUninitializedVariantPtr rReturn, * rValid);

void callVariantGet(GDExtensionInterfaceVariantGet fn, GDExtensionConstVariantPtr pSelf, GDExtensionConstVariantPtr pKey, GDExtensionUninitializedVariantPtr rRet, * rValid);

void callVariantGetConstantValue(GDExtensionInterfaceVariantGetConstantValue fn, GDExtensionVariantType pType, GDExtensionConstStringNamePtr pConstant, GDExtensionUninitializedVariantPtr rRet);

void callVariantGetIndexed(GDExtensionInterfaceVariantGetIndexed fn, GDExtensionConstVariantPtr pSelf, GDExtensionInt pIndex, GDExtensionUninitializedVariantPtr rRet, * rValid, * rOob);

void callVariantGetKeyed(GDExtensionInterfaceVariantGetKeyed fn, GDExtensionConstVariantPtr pSelf, GDExtensionConstVariantPtr pKey, GDExtensionUninitializedVariantPtr rRet, * rValid);

void callVariantGetNamed(GDExtensionInterfaceVariantGetNamed fn, GDExtensionConstVariantPtr pSelf, GDExtensionConstStringNamePtr pKey, GDExtensionUninitializedVariantPtr rRet, * rValid);

GDExtensionPtrBuiltInMethod callVariantGetPtrBuiltinMethod(GDExtensionInterfaceVariantGetPtrBuiltinMethod fn, GDExtensionVariantType pType, GDExtensionConstStringNamePtr pMethod, GDExtensionInt pHash);

GDExtensionPtrConstructor callVariantGetPtrConstructor(GDExtensionInterfaceVariantGetPtrConstructor fn, GDExtensionVariantType pType, int32_t pConstructor);

GDExtensionPtrDestructor callVariantGetPtrDestructor(GDExtensionInterfaceVariantGetPtrDestructor fn, GDExtensionVariantType pType);

GDExtensionPtrGetter callVariantGetPtrGetter(GDExtensionInterfaceVariantGetPtrGetter fn, GDExtensionVariantType pType, GDExtensionConstStringNamePtr pMember);

GDExtensionPtrIndexedGetter callVariantGetPtrIndexedGetter(GDExtensionInterfaceVariantGetPtrIndexedGetter fn, GDExtensionVariantType pType);

GDExtensionPtrIndexedSetter callVariantGetPtrIndexedSetter(GDExtensionInterfaceVariantGetPtrIndexedSetter fn, GDExtensionVariantType pType);

GDExtensionPtrKeyedChecker callVariantGetPtrKeyedChecker(GDExtensionInterfaceVariantGetPtrKeyedChecker fn, GDExtensionVariantType pType);

GDExtensionPtrKeyedGetter callVariantGetPtrKeyedGetter(GDExtensionInterfaceVariantGetPtrKeyedGetter fn, GDExtensionVariantType pType);

GDExtensionPtrKeyedSetter callVariantGetPtrKeyedSetter(GDExtensionInterfaceVariantGetPtrKeyedSetter fn, GDExtensionVariantType pType);

GDExtensionPtrOperatorEvaluator callVariantGetPtrOperatorEvaluator(GDExtensionInterfaceVariantGetPtrOperatorEvaluator fn, GDExtensionVariantOperator pOperator, GDExtensionVariantType pTypeA, GDExtensionVariantType pTypeB);

GDExtensionPtrSetter callVariantGetPtrSetter(GDExtensionInterfaceVariantGetPtrSetter fn, GDExtensionVariantType pType, GDExtensionConstStringNamePtr pMember);

GDExtensionPtrUtilityFunction callVariantGetPtrUtilityFunction(GDExtensionInterfaceVariantGetPtrUtilityFunction fn, GDExtensionConstStringNamePtr pFunction, GDExtensionInt pHash);

GDExtensionVariantType callVariantGetType(GDExtensionInterfaceVariantGetType fn, GDExtensionConstVariantPtr pSelf);

void callVariantGetTypeName(GDExtensionInterfaceVariantGetTypeName fn, GDExtensionVariantType pType, GDExtensionUninitializedStringPtr rName);

GDExtensionBool callVariantHasKey(GDExtensionInterfaceVariantHasKey fn, GDExtensionConstVariantPtr pSelf, GDExtensionConstVariantPtr pKey, * rValid);

GDExtensionBool callVariantHasMember(GDExtensionInterfaceVariantHasMember fn, GDExtensionVariantType pType, GDExtensionConstStringNamePtr pMember);

GDExtensionBool callVariantHasMethod(GDExtensionInterfaceVariantHasMethod fn, GDExtensionConstVariantPtr pSelf, GDExtensionConstStringNamePtr pMethod);

GDExtensionInt callVariantHash(GDExtensionInterfaceVariantHash fn, GDExtensionConstVariantPtr pSelf);

GDExtensionBool callVariantHashCompare(GDExtensionInterfaceVariantHashCompare fn, GDExtensionConstVariantPtr pSelf, GDExtensionConstVariantPtr pOther);

void callVariantIterGet(GDExtensionInterfaceVariantIterGet fn, GDExtensionConstVariantPtr pSelf, GDExtensionVariantPtr rIter, GDExtensionUninitializedVariantPtr rRet, * rValid);

GDExtensionBool callVariantIterInit(GDExtensionInterfaceVariantIterInit fn, GDExtensionConstVariantPtr pSelf, GDExtensionUninitializedVariantPtr rIter, * rValid);

GDExtensionBool callVariantIterNext(GDExtensionInterfaceVariantIterNext fn, GDExtensionConstVariantPtr pSelf, GDExtensionVariantPtr rIter, * rValid);

void callVariantNewCopy(GDExtensionInterfaceVariantNewCopy fn, GDExtensionUninitializedVariantPtr rDest, GDExtensionConstVariantPtr pSrc);

void callVariantNewNil(GDExtensionInterfaceVariantNewNil fn, GDExtensionUninitializedVariantPtr rDest);

GDExtensionInt callVariantRecursiveHash(GDExtensionInterfaceVariantRecursiveHash fn, GDExtensionConstVariantPtr pSelf, GDExtensionInt pRecursionCount);

void callVariantSet(GDExtensionInterfaceVariantSet fn, GDExtensionVariantPtr pSelf, GDExtensionConstVariantPtr pKey, GDExtensionConstVariantPtr pValue, * rValid);

void callVariantSetIndexed(GDExtensionInterfaceVariantSetIndexed fn, GDExtensionVariantPtr pSelf, GDExtensionInt pIndex, GDExtensionConstVariantPtr pValue, * rValid, * rOob);

void callVariantSetKeyed(GDExtensionInterfaceVariantSetKeyed fn, GDExtensionVariantPtr pSelf, GDExtensionConstVariantPtr pKey, GDExtensionConstVariantPtr pValue, * rValid);

void callVariantSetNamed(GDExtensionInterfaceVariantSetNamed fn, GDExtensionVariantPtr pSelf, GDExtensionConstStringNamePtr pKey, GDExtensionConstVariantPtr pValue, * rValid);

void callVariantStringify(GDExtensionInterfaceVariantStringify fn, GDExtensionConstVariantPtr pSelf, GDExtensionStringPtr rRet);

int64_t callWorkerThreadPoolAddNativeGroupTask(GDExtensionInterfaceWorkerThreadPoolAddNativeGroupTask fn, GDExtensionObjectPtr pInstance, void* pFunc,  pUserdata,  pElements,  pTasks, GDExtensionBool pHighPriority, GDExtensionConstStringPtr pDescription);

int64_t callWorkerThreadPoolAddNativeTask(GDExtensionInterfaceWorkerThreadPoolAddNativeTask fn, GDExtensionObjectPtr pInstance, void* pFunc,  pUserdata, GDExtensionBool pHighPriority, GDExtensionConstStringPtr pDescription);

GDExtensionInt callXmlParserOpenBuffer(GDExtensionInterfaceXmlParserOpenBuffer fn, GDExtensionObjectPtr pInstance, const * pBuffer, size_t pSize);

